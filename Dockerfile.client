# --- Build Stage ---
# Use an official Node.js runtime as a parent image to build the project
FROM node:18-alpine AS builder

# Set the working directory in the container
WORKDIR /app

# Declare the build-time argument from docker-compose
ARG REACT_APP_API_URL
# Set it as an environment variable for the builder stage
ENV REACT_APP_API_URL=$REACT_APP_API_URL

# Copy client package files and install dependencies
COPY client/package.json client/package-lock.json* ./
RUN npm install --silent

# Copy client source code into the container
COPY client/ .

# Build the React application for production, using the environment variable
RUN npm run build

# --- Production Stage ---
# Use a lightweight Nginx image to serve the static files
FROM nginx:stable-alpine

# Copy the built static files from the builder stage to the Nginx server
COPY --from=builder /app/build /usr/share/nginx/html

# Copy the custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80 to the outside world
EXPOSE 80